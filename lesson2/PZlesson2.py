"""
Практическое задание к уроку 2
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
"""

my_list = [10, 5.2, 'text', ('a', 'b', 'c'), {1: 'a', 2: 'b', 3: 'c'}, [1, 2, 3, 4, 5, 6], set('abc')]

for element in my_list:
    print(f'{element} - тип {type(element)}')

"""
2. Для списка реализовать обмен значений соседних элементов.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
При нечётном количестве элементов последний сохранить на своём месте.
Для заполнения списка элементов нужно использовать функцию input().
"""

try:
    count_element = int(input('Введите количество элементов списка (целое положительное число): '))
except ValueError:
    print('Введено некорретное значение!')
else:
    user_list = []
    i = 1
    while i <= count_element:
        user_list.append(input(f'Введите {i}й элемент списка: '))
        i += 1
    print(f'Первоначальный список: {user_list}')
    i = 0
    while i in range(0, len(user_list)-1, 2):
        user_list[i], user_list[i + 1] = user_list[i + 1], user_list[i]
        i = i + 2
    print(f'Измененный список {user_list}')

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и dict.
"""

try:
    user_month = int(input('Введите номер месяца от 1 до 12: '))
    if user_month == 0 or user_month > 12:
        raise ValueError
except ValueError:
    print('Введено некорретное значение!')
else:
    # Вариант 1 - через словарь
    season_dict = {(12, 1, 2): 'зима',
                   (3, 4, 5): 'весна',
                   (6, 7, 8): 'лето',
                   (9, 10, 11): 'осень'
                   }

    for key, value in season_dict.items():
        if user_month in key:
            print(f'Пора года (через словарь) - {value}')

    # Вариант 2 - через лист
    winner = [12, 1, 2]
    spring = [3, 4, 5]
    summer = [6, 7, 8]
    autumn = [9, 10, 11]
    if user_month in winner:
        print(f'Пора года (через лист) - зима')
    elif user_month in spring:
        print(f'Пора года (через лист) - весна')
    elif user_month in summer:
        print(f'Пора года (через лист) - лето')
    elif user_month in autumn:
        print(f'Пора года (через лист) - осень')
    else:
        print('Пора года не найдена')


"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
Вывести каждое слово с новой строки. Строки нужно пронумеровать.
Если слово длинное, выводить только первые 10 букв в слове.
"""

user_string = input('Введите строку из нескольких слов, разделенных пробелами: ')
user_list = user_string.split(' ')

for ind, element in enumerate(user_list):
    print(ind + 1, element[:10])

"""
5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
У пользователя нужно запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
"""

user_list = [7, 5, 3, 3, 2]

new_element = True
while new_element:
    new_element = input('Введите новый элемент рейтинга (целое число): ')
    if new_element.isdigit():
        new_element = int(new_element)
        break
    else:
        new_element = True
        print(f'Необходимо ввести целое число!')

user_list.append(new_element)
user_list.sort(reverse=True)
print(f'Рейтинг: {user_list}')

"""
6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами,
то есть характеристиками товара: название, цена, количество, единица измерения.
Структуру нужно сформировать программно, запросив все данные у пользователя.
Пример готовой структуры:
[
    (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
    (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
    (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
"""

print('-------------- Каталог товаров --------------')
catalog_product = []
count_product = 0

while True:
    print(f'Товар {count_product + 1}')
    product = {'название': input('Введите наименование товара: '),
               'цена': input('Введите стоимость товара: '),
               'количество': input('Введите количество единиц товара: '),
               'единица измерения': input('Введите единицу измерения товара: ')}
    catalog_product.append(product)
    choice = input('Хотите добавить еще один товар? Если да - введите yes: ')
    if choice == 'yes':
        count_product += 1
    else:
        break

catalog_product_list = []

for ind, element in enumerate(catalog_product):
    item_product = ind + 1, element
    catalog_product_list.append(tuple(item_product))

print('-------------- Каталог товаров --------------')

for element in catalog_product_list:
    print(element)

"""
Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
например, название. Тогда значение — список значений-характеристик, например, список названий товаров.
Пример:
{
    “название”: [“компьютер”, “принтер”, “сканер”],
    “цена”: [20000, 6000, 2000],
    “количество”: [5, 2, 7],
    “ед”: [“шт.”]
}
"""

names_product = []
prices_product = []
counts_items = []
units_product = []

for element in catalog_product_list:
    names_product.append(element[1]['название'])
    prices_product.append(element[1]['цена'])
    counts_items.append(element[1]['количество'])
    units_product.append(element[1]['единица измерения'])

print('-------------- Аналитика о товарах --------------')

statistic_product = {
    'название': list(names_product),
    'цена': list(prices_product),
    'количество': list(counts_items),
    'единица измерения': list(units_product)
}

print(statistic_product)