"""
Практическое задание к уроку 1
1. Поработайте с переменными, создайте несколько, выведите на экран.
Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
"""


name = input('Enter your name: ')
print(f'Hi, {name}')
age = int(input('Enter your age: '))
print(f'Great, you are only {age} years old.')

"""
2. Пользователь вводит время в секундах. 
Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс. 
Используйте форматирование строк.
"""

user_time = int(input('Enter time in seconds: '))
hour = user_time // 3600
minute = (user_time - hour * 3600) // 60
second = user_time % 60

print(f'{user_time} seconds is {hour:02}:{minute:02}:{second:02}.')

"""
3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Н
апример, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
"""

user_number = int(input('Enter number between 1 and 9: '))
user_number2 = user_number * 10 + user_number
user_number3 = user_number * 100 + user_number * 10 + user_number
result = user_number + user_number2 + user_number3
print(f'Result {user_number} + {user_number2} + {user_number3} = {result}')

"""
4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе. 
Для решения используйте цикл while и арифметические операции.
"""

user_number = input('Enter number: ')
max_number = int(user_number[0])
i = 0

while i in range(len(user_number)):
    if max_number < int(user_number[i]):
        max_number = int(user_number[i])
    i += 1

print(f'Max number in {user_number} = {max_number}.')

"""
5. Запросите у пользователя значения выручки и издержек фирмы. 
Определите, с каким финансовым результатом работает фирма. 
Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки. Выведите соответствующее сообщение.
Если фирма отработала с прибылью, вычислите рентабельность выручки. 
Это отношение прибыли к выручке. 
Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.
"""

proceeds = int(input('Введите значение выручки в $ за период январь-сентябрь 2021 года: '))
costs = int(input('Введите значение издержек в $ за период январь-сентябрь 2021 года: '))

if proceeds < costs:
    print(f'Вы работаете в убыток. Убыток за январь-сентябрь 2021 года составил {proceeds - costs}$.')
elif proceeds == costs:
    print(f'Вы работаете в ноль (без прибыли). '
          f'Финансовый результат за январь-сентябрь 2021 года составил {proceeds - costs}$.')
else:
    print(f'Вы работаете в прибыль. '
          f'Прибыль за январь-сентябрь 2021 года составила {proceeds - costs}$. '
          f'Рентабельность выручки = {(((proceeds - costs) / proceeds) * 100):.2f}%.')
    count_employee = int(input('Введите количество сотрудников фирмы на 30.09.2021: '))
    print(f'Прибыль фирмы в расчете на 1 сотрудника = {((proceeds - costs) / count_employee):.2f}$.')

"""
6. Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров. 
Каждый день спортсмен увеличивал результат на 10% относительно предыдущего. 
Требуется определить номер дня, на который результат спортсмена составит не менее b километров. 
Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на шестой день спортсмен достиг результата — не менее 3 км.
"""

distance_a = int(input('Введите количество километров пробежки в первый день (a): '))
distance_b = int(input('Введите количество километров пробежки, которое хотите достичь (b) (меньше а): '))

result = 1
print(f'1-й день: {distance_a}')

while distance_a < distance_b:
    distance_a *= 1.1
    result += 1
    print(f'{result}-й день: {distance_a:.2f}')

print(f'При увеличении результата на 10% относительно предыдущего ежедневно'
      f' вам понадобится {result} дней тренировок.')